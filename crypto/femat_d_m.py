#coding:utf-8
import gmpy2
import libnum

bignumber = 259890247443804761118228016219136684924167917522422806784955644506207888351304889509903433463527585637662916733749092132376942374314732903500147772464631303079816368071397816148840032140257741234623942972389330658394009752410215122103809627221978841602901343785314357668760003964914166778126289222020290468903953247175457923739210505739006832916267484268910832870071479071917094394577029957202256240184604809173087617931324803860474150820931470601204798293536446102918790547726389486804819530604731780327035091686886029998993701502986883473430288066966414564995833243607159289786503640253962387954613582807541606942749
status = gmpy2.iroot(bignumber, 2)[1]
rootnumber =  gmpy2.iroot(bignumber, 2)[0] #结果

i = 1
while (True):
    rootnumber += 1
    offset = rootnumber**2 - bignumber

    status1 = gmpy2.iroot(offset, 2)[1]
    rootoffset = gmpy2.iroot(offset,2)[0]
    if status1:
        p = rootnumber + rootoffset
        q = p-2*rootoffset
        print i
        print p
        print q
        break
    else:
        i+=1


# c = 0x32083A7D65AD94E25E193E0740FE348FB5C35D17329D5446015C85F134BA59FE8607941E5FE605243EFA6E3638A4AB96BB6FAEDAAB095DDD1EE1757919D82C39865C81F5F7FA3E4E72FC976D8A37E3A5591B6C75ED9B65AF8A516B44B06162550347CCE972E4AE121F1A595DFFD9051D5DDF2CC2BF2D04FAEE8EAB92F57CDD9B
# e = 0x10001
# n = bignumber

# fi = (p-1)*(q-1)
# d = gmpy2.invert(e,fi)
# m = gmpy2.powmod(c,d,n)

# print libnum.n2s(m)